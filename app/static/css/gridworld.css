:root {
    --bg-color: #f0f4f8;
    --grid-line-color: #d0d9e1;
}

.grid {
    display: grid;
    grid-template-columns: repeat(var(--grid-size-x), var(--cell-size));
    grid-template-rows: repeat(var(--grid-size-y), var(--cell-size));
    margin: 0;
    position: relative;
    z-index: 1;
    background-image: 
        linear-gradient(to right, var(--grid-line-color) 1px, transparent 1px),
        linear-gradient(to bottom, var(--grid-line-color) 1px, transparent 1px);
    background-size: var(--cell-size) var(--cell-size);
}

.cell {
    position: relative;
    width: var(--cell-size);
    height: var(--cell-size);
    box-sizing: border-box;
    background-color: rgba(255, 255, 255, 0.5);
    transition: background-color 0.3s ease;
}

.wall {
    background-color: rgba(136, 136, 136, 0.7);
}

/* Agent styling */
.agent-cell {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 5;
    display: flex;
    align-items: center;
    justify-content: center;
}

.agent-cell img {
    width: 80%;
    height: 80%;
    object-fit: contain;
    aspect-ratio: 1 / 1;
}

/* Header cells */
.title-cell,
.location-cell,
.buttons-cell {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    width: 100%;
    text-align: center;
    margin-top: -10px;
    z-index: 10;
}

.title-cell {
    top: 30%; /* Adjust percentages to control vertical positioning */
    z-index: 100;
    background-color: rgba(255, 255, 255, 0.0) !important;

}
.location-cell h3{
    font-size: 2em !important;
    font-weight: 800 !important;
    text-shadow: 1px 1px 2px rgba(255, 255, 255, 0.2);

}


.location-cell {
    top: 50%;
    background-color: rgba(255, 255, 255, 0.0) !important;

}

.buttons-cell {
    top: 60%;
    background-color: rgba(255, 255, 255, 0.0) !important;

}

.title-cell h1,
.location-cell h3,
.buttons-cell .buttons {
    margin: 0;
    color: #000; /* Ensure text is visible */
    text-shadow: 1px 1px 2px rgba(255, 255, 255, 0.8);
}

/* Buttons styling */
.buttons-cell .buttons a {
    font-size: 1.8vw; /* Increase font size */
    padding: 0.8vw 1.5vw; /* Increase padding */
    background-color: #1e90ff;
    color: white;
    text-decoration: none;
    border-radius: 4px;
    margin: 25px !important;
    display: inline-block;
    font-weight: bold; /* Make it bold */
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); /* Add subtle shadow */
    pointer-events: auto; /* Ensure buttons are clickable */
}

.buttons-cell .buttons a.apply {
    background-color: #ff4500;
}

/* Remove absolute positioning from inventory and memory */
.inventory,
.memory {
    /* Remove these properties */
    /* position: absolute;
    bottom: 16px;
    left: 16px;
    z-index: 6;
    background: rgba(255, 255, 255, 0.8);
    padding: 8px;
    border-radius: 4px; */

    /* Add or ensure the following properties */
    position: static;
    background: none;
    padding: 0;
    margin-bottom: 20px;
}

.memory {
    list-style-type: none;
    padding-left: 0;
    max-height: 700px; /* Adjust this value as needed */
    overflow-y: auto;
}

.memory li {
    margin-bottom: 5px;
    padding: 5px;
    background-color: #f0f0f0;
    border-radius: 3px;
}

/* Key and door styling */
.key {
    font-weight: bold;
}

.door {
    font-style: italic;
}

/* Responsive text sizing */
.cell h1 {
    font-size: 4vw; /* Increase font size */
    font-weight: bold; /* Make it bold */
}

.cell h3 {
    font-size: 2.5vw; /* Increase font size */
}

/* Hide default overlay if any */
.grid-overlay {
    display: none;
}

/* Reset default margins and paddings */
body, html {
    margin: 0;
    padding: 0;
    background-color: var(--bg-color);
}

/* Ensure the '.hero' section and its children have no top margin */
.hero {
    position: relative;
    height: 100vh;
    overflow: hidden;
    margin: 0;
    padding: 0;
}

/* Adjust CSS for Image Sizing */
.cell img {
    /* width: var(--cell-size); */
    height: var(--cell-size);
    display: block;
    margin: auto;
}

/* Door cell styling */
.door-cell img {
    width: var(--cell-size);
    height: var(--cell-size);
    display: block;
    margin: auto;
    filter: brightness(0) saturate(100%);
}


.red-lock {
    filter: brightness(0) saturate(50%) invert(13%) sepia(90%) saturate(7466%) hue-rotate(0deg) brightness(100%) contrast(114%) !important;
    width: 40% !important;
    height: auto !important;
}

.blue-lock {
    filter: brightness(0) saturate(100%) invert(7%) sepia(100%) saturate(7154%) hue-rotate(248deg) brightness(97%) contrast(143%) !important;
    width: 40% !important;
    height: auto !important;
}

.green-lock {
    filter: brightness(0) saturate(100%) invert(28%) sepia(88%) saturate(1485%) hue-rotate(95deg) brightness(96%) contrast(106%) !important;
    width: 40% !important;
    height: auto !important;
}

.yellow-lock {
    filter: brightness(0) saturate(100%) invert(78%) sepia(61%) saturate(895%) hue-rotate(359deg) brightness(103%) contrast(104%) !important;
    width: 40% !important;
    height: auto !important;
}

.purple-lock {
    filter: brightness(0) saturate(100%) invert(10%) sepia(76%) saturate(6413%) hue-rotate(289deg) brightness(88%) contrast(117%) !important;
    width: 40% !important;
    height: auto !important;
}

.orange-lock {
    filter: brightness(0) saturate(100%) invert(56%) sepia(75%) saturate(1995%) hue-rotate(1deg) brightness(103%) contrast(105%) !important;
    width: 40% !important;
    height: auto !important;
}

.door-container {
    position: relative;
    display: inline-block;
}

.door-image {
    display: block;
    width: 100%;
    height: auto;
}

.lock-icon {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 10%; 
    height: auto;
}

#gridWorld {
    position: relative; /* Establish a positioning context */
}

/* Ensure the gridworld container takes the full viewport */
.gridworld-container {
    display: flex;
    flex-direction: row-reverse; /* Add this line */
    width: 100%;
    height: 100vh;
    overflow: hidden;
}

#gridWorld {
    flex: 1;
    position: relative;
    overflow: hidden;
}

/* Center the overlay content */
.overlay-content {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 2; /* Ensure it stays on top of the grid */
    text-align: center; /* Center text inside the overlay */
}

/* Position the grid as the background */
#grid {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1; /* Place it behind the overlay */
}

/* Sidebar styles */
.sidebar {
    width: 20%;
    min-width: 250px;
    background-color: rgba(255, 255, 255, 1.0);
    padding: 20px;
    box-sizing: border-box;
    overflow-y: auto;
    z-index: 2;
}

.sidebar-content {
    display: flex;
    flex-direction: column;
    height: 100%;
}

.memory {
    flex-grow: 1;
    overflow-y: auto;
    max-height: 50vh; /* Adjust this value to control the height of the thoughts list */
}

.sidebar-bottom {
    display: flex;
    justify-content: space-between;
    margin-top: 20px;
}

.sidebar-section {
    width: 48%; /* Adjust as needed */
}

#mini-map {
    width: 100%;
    height: 150px; /* Adjust as needed */
    border: 1px solid #ccc;
}

.inventory {
    display: flex;
    flex-wrap: wrap;
    gap: 5px;
}

.sidebar h3 {
    margin-top: 0;
    margin-bottom: 10px;
    font-size: 1.2em;
}

/* Responsive layout */
@media (max-width: 768px) {
    .gridworld-container {
        flex-direction: column;
    }

    .sidebar {
        width: 100%;
        height: auto;
        min-height: 200px;
    }
}

/* Ensure the grid takes up the full space */
#grid {
    width: 100%;
    height: 100%;
}

/* Adjust the hero overlay to center content on the grid */
.hero-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 80%; /* Matches the remaining space after the 20% sidebar */
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    z-index: 1000;
    pointer-events: none; /* Keep this to prevent interaction with the overlay itself */
}

/* Add these new rules */
.hero-overlay > * {
    pointer-events: auto; /* Enable interactions for direct children of hero-overlay */
}

/* Responsive adjustment */
@media (max-width: 768px) {
    .hero-overlay {
        width: 100%; /* Full width on smaller screens */
    }
}

#gridWorld {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

.cell {
    text-align: center;
    margin-bottom: 20px;
}

.title-cell h1 {
    font-size: 3rem;
    margin-bottom: 0.5em;
}

.location-cell h3 {
    font-size: 1.5rem;
    margin-bottom: 2em;
    padding-bottom: 2em;
}

.buttons-cell .buttons a {
    display: inline-block;
    padding: 10px 20px;
    margin: 0 10px;
    background-color: #1e90ff;
    color: white;
    text-decoration: none;
    border-radius: 5px;
}

.buttons-cell .buttons a.apply {
    background-color: #ff4500;
}

/* Add these new styles for the keys */
.key-icon {
    width: 80%;
    height: 80%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.key-icon::before {
    content: 'ðŸ”‘';
    font-size: 2em;
    filter: grayscale(100%) brightness(0);
}

.key-red::before {
    filter: brightness(0) saturate(100%) invert(13%) sepia(90%) saturate(7466%) hue-rotate(0deg) brightness(100%) contrast(114%) !important;
}

.key-blue::before {
    filter: brightness(0) saturate(100%) invert(7%) sepia(100%) saturate(7154%) hue-rotate(248deg) brightness(97%) contrast(143%) !important;
}

.key-green::before {
    filter: brightness(0) saturate(100%) invert(28%) sepia(88%) saturate(1485%) hue-rotate(95deg) brightness(96%) contrast(106%) !important;
}

.key-yellow::before {
    filter: brightness(0) saturate(100%) invert(78%) sepia(61%) saturate(895%) hue-rotate(359deg) brightness(103%) contrast(104%) !important;
}

/* Update the inventory item style */
.inventory-item {
    display: inline-block;
    margin-right: 10px;
    font-size: 1.5em;
}

/* Fog of War */
.fog-of-war {
    background-color: #000;
}

/* Mini-Map Styles */
#mini-map {
    display: grid;
    grid-template-columns: repeat(var(--grid-size-x), 1fr);
    grid-template-rows: repeat(var(--grid-size-y), 1fr);
    width: 200px; /* Adjust as needed */
    height: 200px; /* Adjust as needed */
    border: 1px solid #ccc;
    margin-top: 20px;
}

.mini-map-cell {
    width: 100%;
    height: 100%;
}

.mini-map-explored {
    background-color: lightgray;
}

.mini-map-wall {
    background-color: darkgray;
}

.mini-map-agent {
    background-color: blue;
}

.mini-map-unexplored {
    background-color: black;
}